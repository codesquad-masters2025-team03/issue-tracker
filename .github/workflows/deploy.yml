name: Deploy Fullstack App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout Code
        uses: actions/checkout@v3

      - name: ☕ Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: 🛠 Set Frontend Environment
        working-directory: fe
        run: |
          echo "VITE_API_BASE_URL=${{ secrets.FRONTEND_API_BASE_URL }}" > .env.production

      - name: 🧱 Build Frontend
        working-directory: fe
        run: |
          npm install
          npm run build

      - name: 🧱 Build Backend
        working-directory: be
        run: |
          ./gradlew clean build -x test

      - name: 📦 Prepare Deployment Bundle
        run: |
          mkdir -p deploy/app/frontend
          mkdir -p deploy/scripts

          # ✅ jar 복사
          JAR_PATH=$(find be/build/libs -name "*.jar" | head -n 1)
          echo "JAR found: $JAR_PATH"
          cp "$JAR_PATH" deploy/app/app.jar

          # ✅ frontend 빌드 결과물 복사
          cp -r fe/dist/* deploy/app/frontend/

          # ✅ 앱스펙, 스크립트 복사
          cp deploy/appspec.yml deploy/
          cp deploy/scripts/*.sh deploy/scripts/

          # ✅ env 파일 (필요 시)
          touch deploy/application.env

          # ✅ zip 만들기 (deploy/ 내부만 압축)
          cd deploy
          zip -r ../deploy.zip .

      - name: ☁️ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: ☁️ Upload to S3
        run: |
          aws s3 cp deploy.zip s3://${{ secrets.S3_BUCKET_NAME }}/deploy.zip

      - name: 🚀 Deploy with CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.CODEDEPLOY_APP_NAME }} \
            --deployment-group-name ${{ secrets.CODEDEPLOY_GROUP_NAME }} \
            --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=zip,key=deploy.zip \
            --region ${{ secrets.AWS_REGION }}
