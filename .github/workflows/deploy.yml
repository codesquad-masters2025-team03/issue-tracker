name: Deploy Fullstack App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy-fullstack:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Setup JDK 21"
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: "Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: "Build Spring Boot Backend"
        run: |
          cd be
          ./gradlew clean build
          cd ..

      - name: "Build React Frontend"
        run: |
          cd fe
          echo "VITE_API_BASE_URL=/api" > .env.production
          npm ci
          npm run build
          cd ..

      - name: "Copy Artifacts to EC2"
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./be/build/libs/IssueTracker-0.0.1-SNAPSHOT.jar,./fe/dist,./nginx.conf"
          target: "/home/ubuntu/upload"

      - name: "Run App on EC2"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Kill existing app"
            pkill -f 'java -jar' || true

            echo "Prepare app directory"
            sudo rm -rf /home/ubuntu/app
            sudo mkdir -p /home/ubuntu/app/frontend

            echo "Move artifacts"
            sudo mv /home/ubuntu/upload/IssueTracker-0.0.1-SNAPSHOT.jar /home/ubuntu/app/app.jar
            sudo cp -r /home/ubuntu/upload/dist/* /home/ubuntu/app/frontend/
            sudo mv /home/ubuntu/upload/nginx.conf /etc/nginx/sites-available/default

            echo "Create .env file"
            sudo tee /home/ubuntu/.env > /dev/null <<EOF
            JWT_ACCESS_KEY=${{ secrets.JWT_ACCESS_KEY }}
            JWT_REFRESH_KEY=${{ secrets.JWT_REFRESH_KEY }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            EOF

            echo "Start Spring Boot app"
            cd /home/ubuntu
            set -o allexport && source .env && set +o allexport
            nohup java \
              -Dspring.profiles.active=dev \
              -DJWT_ACCESS_KEY=$JWT_ACCESS_KEY \
              -DJWT_REFRESH_KEY=$JWT_REFRESH_KEY \
              -DAWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
              -DAWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
              -DAWS_REGION=$AWS_REGION \
              -Dcloud.aws.region.static=$AWS_REGION \
              -Dcloud.aws.s3.bucket=$S3_BUCKET_NAME \
              -Dspring.datasource.password=$DB_PASSWORD \
              -jar app/app.jar > app.log 2>&1 &

            echo "Reload Nginx"
            sudo nginx -t && sudo nginx -s reload
